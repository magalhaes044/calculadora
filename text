function generateExplanation(result) {
  explanation = [];
  explanationIndex = 1;
  explanationSteps.innerHTML = "";

  if (typeof result === "number") {
    if (result === 0) {
      explanation.push("Passo 1: O resultado é zero.");
    } else if (result > 0) {
      explanation.push(`Passo 1: O resultado é positivo (${result}).`);
    } else {
      explanation.push(`Passo 1: O resultado é negativo (${result}).`);
    }

    if (Number.isInteger(result)) {
      explanation.push("Passo 2: O resultado é um número inteiro.");
    } else {
      explanation.push("Passo 2: O resultado é um número decimal.");
    }

    if (result > 0) {
      explanation.push(`Passo 3: O resultado é maior que zero.`);
    } else if (result < 0) {
      explanation.push(`Passo 3: O resultado é menor que zero.`);
    } else {
      explanation.push(`Passo 3: O resultado é igual a zero.`);
    }

    // Adicionar explicações para funções trigonométricas
    if (display.value.includes("sin(")) {
      explanation.push("Passo 4: O resultado é o seno do ângulo fornecido.");
    } else if (display.value.includes("cos(")) {
      explanation.push("Passo 4: O resultado é o cosseno do ângulo fornecido.");
    } else if (display.value.includes("tan(")) {
      explanation.push("Passo 4: O resultado é a tangente do ângulo fornecido.");
    }

    // Adicionar explicações para logaritmos
    if (display.value.includes("log(")) {
      explanation.push("Passo 5: O resultado é o logaritmo do número fornecido.");
    } else if (display.value.includes("ln(")) {
      explanation.push("Passo 5: O resultado é o logaritmo natural do número fornecido.");
    }

    // Adicionar explicações para exponenciais
    if (display.value.includes("exp(")) {
      explanation.push("Passo 6: O resultado é a exponencial do número fornecido.");
    }

    // Adicionar explicações para raiz quadrada
    if (display.value.includes("sqrt(")) {
      explanation.push("Passo 7: O resultado é a raiz quadrada do número fornecido.");
    }

  } else {
    explanation.push("O cálculo não resultou em um valor numérico.");
  }

  explanation.forEach((step) => {
    addExplanationStep(step);
  });

  explanationSteps.classList.add("show");
}
